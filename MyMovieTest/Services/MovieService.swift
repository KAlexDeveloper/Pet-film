//
//  MovieService.swift
//  MyMovieTest
//
//  Created by —Å–æ–Ω–Ω—ã–π on 10.07.2025.
//
import Alamofire
import Foundation

protocol MovieServiceProtocol {
    func searchMovies(query: String, page: Int?, limit: Int?) async throws -> [Movie]
}

final class MovieService: MovieServiceProtocol {
    private let apiKey = "FMQ970S-76N461V-GYGMDYK-TSQT6ZQ"
    private let session: Session

    init() {
        self.session = Session()
    }

    func searchMovies(query: String, page: Int? = nil, limit: Int? = nil) async throws -> [Movie] {
        let urlString = "https://api.kinopoisk.dev/v1.4/movie/search"
        guard let url = URL(string: urlString) else {
            throw URLError(.badURL)
        }

        var parameters: [String: Any] = [
            "query": query
        ]
        if let page = page {
            parameters["page"] = page
        }
        if let limit = limit {
            parameters["limit"] = limit
        }

        let headers: HTTPHeaders = [
            "X-API-KEY": apiKey
        ]

        let request = session.request(url, method: .get, parameters: parameters, encoding: URLEncoding.default, headers: headers)

        // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
        let response = await request.serializingResponse(using: DataResponseSerializer()).response

        let statusCode = response.response?.statusCode ?? -1
        print("üîé HTTP —Å—Ç–∞—Ç—É—Å: \(statusCode)")

        if statusCode == 504 {
            print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª (504 Gateway Timeout)")
            throw NSError(domain: "", code: 504, userInfo: [NSLocalizedDescriptionKey: "–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."])
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        let contentType = response.response?.headers["Content-Type"] ?? ""
        if !contentType.contains("application/json") {
            print("‚ùå –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –Ω–µ JSON, –∞ HTML –∏–ª–∏ –¥—Ä—É–≥–æ–π —Ç–∏–ø")
            throw NSError(domain: "", code: -1, userInfo: [NSLocalizedDescriptionKey: "–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö."])
        }

        let rawData = try await request.serializingData().value

        if let jsonString = String(data: rawData, encoding: .utf8) {
            print("üìÑ JSON-–æ—Ç–≤–µ—Ç: \(jsonString)")
        }

        do {
            let decoded = try JSONDecoder().decode(KinopoiskMovieResponse.self, from: rawData)
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–æ: \(decoded.docs.count) —Ñ–∏–ª—å–º–æ–≤")
            return decoded.docs
        } catch {
            print("‚ùå –û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è: \(error)")
            throw NSError(domain: "", code: -1, userInfo: [NSLocalizedDescriptionKey: "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞."])
        }
    }
}
